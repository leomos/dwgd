name: Build dwgd binary

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build binary
    strategy:
      matrix:
        os: [linux]
        arch: [arm64, amd64]
    env:
      GOOS:   ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
      TAG:    ${{ github.ref_name }}
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
          go-version-file: 'go.mod'
          cache: true 
    
    - id: release
      uses: bruceadams/get-release@v1.2.3
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Build binary
      run: |
        go build -ldflags "-X main.Version=${{ env.TAG }}" -o bin/dwgd-${{ env.TAG }}-${{ env.GOOS }}-${{ env.GOARCH }} cmd/dwgd.go

    - name: Create archive
      run: |
        tar -czvf bin/dwgd-${{ env.TAG }}-${{ env.GOOS }}-${{ env.GOARCH }}.tar.gz bin/dwgd-${{ env.TAG }}-${{ env.GOOS }}-${{ env.GOARCH }}

    - name: Upload archive
      uses: actions/upload-artifact@v1
      with:
        name: dwgd-${{ env.TAG }}-${{ env.GOOS }}-${{ env.GOARCH }}.tar.gz
        path: bin/dwgd-${{ env.TAG }}-${{ env.GOOS }}-${{ env.GOARCH }}.tar.gz

    - name: Upload release tarball
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: bin/dwgd-${{ env.TAG }}-${{ env.GOOS }}-${{ env.GOARCH }}.tar.gz
        asset_name: dwgd-${{ env.TAG }}-${{ env.GOOS }}-${{ env.GOARCH }}.tar.gz
        asset_content_type: application/gzip
