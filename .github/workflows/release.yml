name: Release dwgd

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release dwgd tarball
    strategy:
      matrix:
        os: [linux]
        include:
          - arch: amd64
            cc:   gcc
          - arch: arm64
            cc:   aarch64-linux-gnu-gcc
    env:
      GOOS:   ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
      TAG:    ${{ github.ref_name }}
      CC:     ${{ matrix.cc }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
          go-version-file: 'go.mod'
          cache: true 
 
    - id: release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
 
    - name: Install cross-compilers
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf gcc-arm-linux-gnueabi

    - name: Build binary
      run: |
        rm -rf dist
        mkdir -p dist
        CGO_ENABLED=1 go build -tags 'osusergo,netgo,static,' -ldflags '-linkmode=external -extldflags "-static" -X main.Version=${{ env.TAG }}' -o dist/dwgd cmd/dwgd.go
        cp init/* dist/
        cd dist
        tar -czvf dwgd-${{ env.TAG }}-${{ env.GOOS }}-${{ env.GOARCH }}.tar.gz dwgd

    - name: Upload release tarball
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ./dist/dwgd-${{ env.TAG }}-${{ env.GOOS }}-${{ env.GOARCH }}.tar.gz
        asset_name: dwgd-${{ env.TAG }}-${{ env.GOOS }}-${{ env.GOARCH }}.tar.gz
        asset_content_type: application/gzip
